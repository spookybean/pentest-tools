import sys
import argparse

import httpx
from bs4 import BeautifulSoup


parser = argparse.ArgumentParser(description='Reverse the hash using hashtoolkit.com')
parser.add_argument('-H', '--hash', type=str, metavar='', help='Hash value to decrypt (MD5 or SHA1)', required=True)

args = parser.parse_args()


def reverse(hash_value: str) -> None:
    if not (len(hash_value) == 40 or len(hash_value) == 32):
        print('Invalid input hash')
        sys.exit(1)

    url = f'https://hashtoolkit.com/decrypt-hash/?hash={hash_value}'

    headers = {
        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36'
    }

    res = httpx.get(url, headers=headers)
    soup = BeautifulSoup(res.text, 'html.parser')

    if not soup:
        print('No response')
        sys.exit(1)

    try:
        if len(hash_value) == 40:
            text = soup.find('span', {'title': 'decrypted sha1 hash'}).text
        elif len(hash_value) == 32:
            text = soup.find('span', {'title': 'decrypted md5 hash'}).text
    except Exception as e:
        print('Hash not found')
    else:
        print('Decrypted text:', text)


if __name__ == '__main__':
    reverse(hash_value=args.hash)
